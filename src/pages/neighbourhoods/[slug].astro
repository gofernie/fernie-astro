---
import Site from "../../layouts/Site.astro";

/* slug + data helpers */
function slugify(s=""){
  return String(s).toLowerCase().trim()
    .replace(/&/g,"-and-").replace(/[^a-z0-9]+/g,"-").replace(/^-+|-+$/g,"");
}
export async function getStaticPaths(){
  const url = import.meta.env.PUBLIC_SHEET_JSON;
  if(!url) return [];
  const res = await fetch(url);
  const data = await res.json();
  const items = data.map(n => ({...n, _slug:(n.slug?.trim() || slugify(n.title || ""))}));
  return items.filter(n=>n._slug).map(n => ({
    params: { slug: n._slug },
    props: { item: { ...n, slug:n._slug } },
  }));
}

const { item } = Astro.props;
const pageTitle = `${item.title} ‚Äî Fernie Neighbourhood`;
const description = item.desc || `About ${item.title}`;

/* image helpers */
function rawPath(img){ return img ? (img.startsWith("http") ? img : "/images/" + img) : ""; }
function cdn(url,w,h){ return `/.netlify/images?url=${encodeURIComponent(url)}&w=${w}${h?`&h=${h}&fit=cover`:"&fit=cover"}`; }
function heroSrc(url){ return import.meta.env.PROD ? cdn(url,1600,900) : url; }
function heroSrcSet(url){
  if(!import.meta.env.PROD) return undefined;
  const widths=[960,1280,1600,1920];
  return widths.map(w=>`${cdn(url,w,Math.round(w*0.5625))} ${w}w`).join(", ");
}
const raw = rawPath(item.img);
const heroW = 1600, heroH = 900;

/* quick facts (fallbacks) */
const factVibe   = item.vibe   || "Quiet, outdoorsy, family-friendly";
const factTrails = item.trails || "5+ trailheads within 10 min";
const factAccess = item.access || "7 min to Downtown, on bus route";
---

<Site title={pageTitle} description={description} active="neighbourhoods">
  {raw && <link slot="head" rel="preload" as="image" href={heroSrc(raw)} fetchpriority="high" />}

  <!-- HERO -->
  <div slot="hero" class="hero-wrap">
    <style>
      .hero-wrap { position:relative; height:55vh; }
      .hero-img  { position:absolute; inset:0; width:100%; height:100%; object-fit:cover; display:block; }
      .shade     { position:absolute; inset:0; background:linear-gradient(180deg, rgba(0,0,0,.35), rgba(0,0,0,.15)); }
      .hero-text { position:absolute; inset:0; display:flex; align-items:flex-end; }
      :root { --max: 72rem; --pad: 16px; }
      .hero-side {
        box-sizing:border-box; width:100%;
        padding-left:calc(max((100vw - var(--max))/2,0px) + var(--pad));
        padding-right:calc(max((100vw - var(--max))/2,0px) + var(--pad));
        padding-bottom:calc(var(--pad) * 2); color:#fff;
      }
      .hero-title { margin:0; font-size:clamp(28px,5vw,44px); line-height:1.15; text-shadow:0 2px 18px rgba(0,0,0,.35); }
    </style>

    {raw ? (
      <>
        <img class="hero-img" src={heroSrc(raw)} srcset={heroSrcSet(raw)} sizes="100vw"
             alt={item.title} width={heroW} height={heroH} fetchpriority="high" decoding="async" />
        <div class="shade"></div>
        <div class="hero-text"><div class="hero-side"><h1 class="hero-title">{item.title}</h1></div></div>
      </>
    ) : (
      <div class="hero-text"><div class="hero-side"><h1 class="hero-title">{item.title}</h1></div></div>
    )}
  </div>

  <style>
    .back {
      display:inline-block; margin:12px 0 16px; text-decoration:none; color:#111;
      border:1px solid #111; padding:8px 12px; border-radius:10px;
    }

    /* Quick facts mini-cards */
    .qfacts-grid {
      display:grid; grid-template-columns:repeat(auto-fit, minmax(220px,1fr));
      gap:16px; margin:24px 0;
    }
    .qfact-box {
      background:#fff; border:1px solid #e5e7eb; border-radius:12px;
      box-shadow:0 1px 3px rgba(0,0,0,.08); padding:12px 16px;
      display:flex; flex-direction:column; gap:4px;
    }
    .qfact-box strong { display:flex; align-items:center; gap:6px; font-weight:700; font-size:14px; color:#111827; }
    .qfact-box p { margin:0; font-size:13px; color:#4b5563; }

    /* Main cards */
    .card {
      border:1px solid #cbd5e1; border-radius:14px; box-shadow:0 4px 10px rgba(0,0,0,.08);
      background:#fff; margin:24px 0; overflow:hidden;
    }
    .card h2 { margin:0; padding:16px; border-bottom:1px solid #e5e7eb; font-size:18px; color:#334155; }
    .card-body { padding:16px; }
    .content :where(h2,h3){margin-top:1.2em}

    /* CTA card */
    .cta-card {
      margin: 32px 0;
      padding: 24px;
      background: #f8fafc;
      border: 1px solid #e5e7eb;
      border-radius: 14px;
      text-align: center;
      box-shadow: 0 1px 4px rgba(0,0,0,.05);
    }
    .cta-card h2 {
      margin: 0 0 8px;
      font-size: 20px;
      font-weight: 700;
      color: #1e293b;
    }
    .cta-card p {
      margin: 0 0 16px;
      color: #475569;
      font-size: 15px;
    }
    .cta-button {
      display: inline-block;
      background: #0971ce;
      color: #fff;
      font-weight: 600;
      padding: 10px 20px;
      border-radius: 8px;
      text-decoration: none;
      transition: background .2s ease, transform .2s ease;
    }
    .cta-button:hover {
      background: #0757a6;
      transform: translateY(-1px);
    }
  </style>

  <a class="back" href="/neighbourhoods">‚Üê Back to neighbourhoods</a>

  <!-- OVERVIEW CARD FIRST -->
  <section class="card" aria-labelledby="desc-title">
    <h2 id="desc-title">{item.title} Overview</h2>
    <div class="card-body"><p>{item.desc}</p></div>
  </section>

  <!-- MINI FACT BOXES -->
  <section id="qfacts" class="qfacts-grid" aria-label="Quick facts"
           style="display:grid;visibility:visible;opacity:1">
    <div class="qfact-box"><strong>üèîÔ∏è Vibe</strong><p>{factVibe}</p></div>
    <div class="qfact-box"><strong>üö≤ Trails</strong><p>{factTrails}</p></div>
    <div class="qfact-box"><strong>üöå Access</strong><p>{factAccess}</p></div>
  </section>

  <!-- CTA CARD ABOVE ABOUT -->
  <section class="cta-card">
    <h2>View Homes for Sale in {item.title}</h2>
    <p>See the latest listings and market updates for {item.title}. Start exploring now.</p>
    <a class="cta-button" href={`/search?neighbourhood=${item.slug}`}>
      Browse {item.title} Homes ‚Üí
    </a>
  </section>

  <!-- OPTIONAL ABOUT CARD -->
  {item.about && (
    <section class="card" aria-labelledby="about-title">
      <h2 id="about-title">About {item.title}</h2>
      <div class="card-body">
        <section class="content" set:html={item.about}></section>
      </div>
    </section>
  )}

  <script>
    (function () {
      const el = document.getElementById('qfacts');
      if (!el) return;
      const lock = () => {
        el.style.display = 'grid';
        el.style.visibility = 'visible';
        el.style.opacity = '1';
        el.removeAttribute('hidden');
        el.classList.remove('hidden','is-hidden','sr-only');
      };
      lock();
      const mo = new MutationObserver(() => { console.warn('[qfacts] visibility changed'); lock(); });
      mo.observe(el, { attributes: true, attributeFilter: ['class','style','hidden'] });
    })();
  </script>
</Site>
