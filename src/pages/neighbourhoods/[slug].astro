---
import Site from "../../layouts/Site.astro";

/** Static pages from your sheet */
function slugify(s = "") {
  return String(s).toLowerCase().trim()
    .replace(/&/g,"-and-")
    .replace(/[^a-z0-9]+/g,"-")
    .replace(/^-+|-+$/g,"");
}

export async function getStaticPaths() {
  const url = import.meta.env.PUBLIC_SHEET_JSON;
  if (!url) return [];
  const res = await fetch(url);
  const data = await res.json();

  const items = data.map((n) => ({ ...n, _slug: (n.slug?.trim() || slugify(n.title || "")) }));
  return items.filter(n => n._slug).map(n => ({
    params: { slug: n._slug },
    props: { item: { ...n, slug: n._slug } },
  }));
}

const { item } = Astro.props;
const pageTitle = `${item.title} — Fernie Neighbourhood`;
const description = item.desc || `About ${item.title}`;

// image helpers (dev raw; prod Netlify CDN)
function rawPath(img) { return img ? (img.startsWith("http") ? img : "/images/" + img) : ""; }
function cdn(url, w, h) { return `/.netlify/images?url=${encodeURIComponent(url)}&w=${w}${h ? `&h=${h}&fit=cover` : "&fit=cover"}`; }
function heroSrc(url) { return import.meta.env.PROD ? cdn(url, 1600, 900) : url; }
function heroSrcSet(url) {
  if (!import.meta.env.PROD) return undefined;
  const widths = [960, 1280, 1600, 1920];
  return widths.map(w => `${cdn(url, w, Math.round(w*0.5625))} ${w}w`).join(", ");
}

const raw = rawPath(item.img);
const heroW = 1600, heroH = 900;

// pills: array or CSV
const pills = Array.isArray(item.pills)
  ? item.pills.filter(Boolean)
  : String(item.pills ?? "").split(",").map(s => s.trim()).filter(Boolean);
---
<Site title={pageTitle} description={description} active="neighbourhoods">
  {raw && <link slot="head" rel="preload" as="image" href={heroSrc(raw)} fetchpriority="high" />}

  <div slot="hero">
    <style>.hero40{width:100%;height:40vh;object-fit:cover;display:block;border-bottom:1px solid #eee}</style>
    {raw && (
      <img
        class="hero40"
        src={heroSrc(raw)}
        srcset={heroSrcSet(raw)}
        sizes="100vw"
        alt={item.title}
        width={heroW} height={heroH}
        fetchpriority="high"
        decoding="async"
      />
    )}
  </div>

  <style>
    .title{margin:0 0 8px;font-size:clamp(28px,4vw,42px)}
    .lede{color:#444;margin:0 0 16px}
    .content :where(h2,h3){margin-top:1.2em}
    .back{display:inline-block;margin:8px 0 16px;text-decoration:none;color:#111;border:1px solid #111;padding:8px 12px;border-radius:10px}
    .pills{display:flex;gap:8px;flex-wrap:wrap;margin:8px 0 16px}
    .pill{border:1px solid #ddd;border-radius:999px;padding:4px 10px;font-size:12px;color:#444;background:#fff}
  </style>

  <a class="back" href="/neighbourhoods">← Back to neighbourhoods</a>
  <h1 class="title">{item.title}</h1>

  {pills.length > 0 && (
    <div class="pills" aria-label="Highlights">
      {pills.map(p => <span class="pill">{p}</span>)}
    </div>
  )}

  {item.desc && <p class="lede">{item.desc}</p>}
  <section class="content" set:html={item.about}></section>
</Site>
