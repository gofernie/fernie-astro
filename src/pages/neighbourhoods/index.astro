---
import Site from "../../layouts/Site.astro";

const title = "Neighbourhoods — Fernie";
const description = "Browse Fernie neighbourhoods (data from Google Sheets).";

/* helpers */
function slugify(s=""){return String(s).toLowerCase().trim().replace(/&/g,"-and-").replace(/[^a-z0-9]+/g,"-").replace(/^-+|-+$/g,"");}
async function fetchSheet(url){ if(!url) throw new Error("PUBLIC_SHEET_JSON missing."); const r=await fetch(url,{cache:"no-store"}); return r.json(); }

/* img helpers */
function rawPath(img){ if(!img) return ""; return img.startsWith("http")?img:"/images/"+img; }
function cdn(u,w,h){ return `/.netlify/images?url=${encodeURIComponent(u)}&w=${w}${h?`&h=${h}&fit=cover`:"&fit=cover"}`; }
function heroSrc(u){ return import.meta.env.PROD ? cdn(u,1600,900) : u; }
function heroSrcSet(u){ if(!import.meta.env.PROD) return undefined; const ws=[960,1280,1600,1920]; return ws.map(w=>`${cdn(u,w,Math.round(w*0.5625))} ${w}w`).join(", "); }
const CARD_H_FACTOR = 10/19;
function cardSrc(u,w=480){ const h=Math.round(w*CARD_H_FACTOR); return import.meta.env.PROD ? cdn(u,w,h) : u; }
function cardSrcset(u){ if(!import.meta.env.PROD) return undefined; const ws=[360,480,640,800]; return ws.map(w=>`${cdn(u,w,Math.round(w*CARD_H_FACTOR))} ${w}w`).join(", "); }

const url = import.meta.env.PUBLIC_SHEET_JSON;
let rows = [];
try { const raw=await fetchSheet(url); rows=raw.map(n=>({...n,_slug:(n.slug?.trim()||slugify(n.title||""))})); }
catch { rows=[{_slug:"",title:"Fallback",desc:"Sheet didn’t load.",img:""}]; }

const heroCandidates = rows.filter(r=>r.img);
const heroPick = heroCandidates.length ? heroCandidates[Math.floor(Math.random()*heroCandidates.length)] : null;
const heroRaw = heroPick ? rawPath(heroPick.img) : "/images/montane.webp";
const heroSrcUrl = heroSrc(heroRaw);
const heroSet = heroSrcSet(heroRaw);
const heroW = 1600, heroH = 900;

const SIZES = "(min-width: 960px) calc((min(72rem, 100vw) - 32px) / 3), (min-width: 640px) calc((min(72rem, 100vw) - 32px) / 2), calc(min(72rem, 100vw) - 32px)";
---
<Site title={title} description={description} active="neighbourhoods">
  {heroSrcUrl && <link slot="head" rel="preload" as="image" href={heroSrcUrl} fetchpriority="high" />}

  <div slot="hero">
    <style>
      .hero40{ width:100%; height:40vh; object-fit:cover; display:block; border-bottom:1px solid #eee; }
    </style>
    <img
      class="hero40"
      src={heroSrcUrl}
      srcset={heroSet}
      sizes="100vw"
      alt="Neighbourhoods"
      width={heroW} height={heroH}
      fetchpriority="high"
      decoding="async"
    />
  </div>

  <style>
    .grid{display:grid;gap:16px;grid-template-columns:1fr}
    @media (min-width:640px){.grid{grid-template-columns:repeat(2,1fr)}}
    @media (min-width:960px){.grid{grid-template-columns:repeat(3,1fr)}}

    .card{border:1px solid #eee;border-radius:14px;overflow:hidden;background:#fff;box-shadow:0 1px 2px rgba(0,0,0,.04);transition:transform .18s ease, box-shadow .18s ease, border-color .18s ease;}
    @media (hover:hover){.card:hover{transform:translateY(-4px);box-shadow:0 8px 24px rgba(0,0,0,.08);border-color:#e6e6e6}}
    .card a{display:block;color:inherit;text-decoration:none}

    .thumb{aspect-ratio:19/10;width:100%;overflow:hidden}
    .thumb img{width:100%;height:100%;display:block;object-fit:cover}

    .inner{padding:12px}
    .inner h3{margin:6px 0;font-size:18px}
    .inner p{margin:0 0 8px;color:#444}
  </style>

  <h1>Neighbourhoods</h1>

  <section class="grid" aria-label="Neighbourhoods list">
    {rows.map((n, i) => {
      const raw = rawPath(n.img);
      const src = raw ? cardSrc(raw, 480) : "";
      const srcset = raw ? cardSrcset(raw) : undefined;
      return (
        <article class="card">
          <a href={n._slug ? `/neighbourhoods/${n._slug}` : "#"}>
            {raw && (
              <div class="thumb">
                <img
                  src={src}
                  srcset={srcset}
                  sizes={SIZES}
                  alt={n.title}
                  width="800" height="421"
                  loading={i === 0 ? "eager" : "lazy"}
                  fetchpriority={i === 0 ? "high" : undefined}
                  decoding="async"
                />
              </div>
            )}
            <div class="inner">
              <h3>{n.title}</h3>
              <p>{n.desc}</p>
            </div>
          </a>
        </article>
      );
    })}
  </section>
</Site>
