---
import Site from "../../layouts/Site.astro";

const title = "Neighbourhoods — Fernie";
const description = "Browse Fernie neighbourhoods (data from Google Sheets).";

/* helpers */
function slugify(s=""){
  return String(s).toLowerCase().trim()
    .replace(/&/g,"-and-").replace(/[^a-z0-9]+/g,"-").replace(/^-+|-+$/g,"");
}
async function fetchSheet(url){
  if(!url) throw new Error("PUBLIC_SHEET_JSON missing.");
  const r = await fetch(url, { cache: "no-store" });
  return r.json();
}

/* image helpers */
function rawPath(img){ return img ? (img.startsWith("http") ? img : "/images/" + img) : ""; }
function cdn(u,w,h){ return `/.netlify/images?url=${encodeURIComponent(u)}&w=${w}${h?`&h=${h}&fit=cover`:"&fit=cover"}`; }

/* hero helpers */
function heroSrc(u){ return import.meta.env.PROD ? cdn(u,1600,900) : u; }
function heroSrcSet(u){
  if(!import.meta.env.PROD) return undefined;
  const ws=[960,1280,1600,1920];
  return ws.map(w=>`${cdn(u,w,Math.round(w*0.5625))} ${w}w`).join(", ");
}

/* card helpers (thin cards ≈ 19/10) */
const CARD_H_FACTOR = 10/19;
function cardSrc(u,w=480){ const h=Math.round(w*CARD_H_FACTOR); return import.meta.env.PROD ? cdn(u,w,h) : u; }
function cardSrcset(u){
  if(!import.meta.env.PROD) return undefined;
  const ws=[360,480,640,800];
  return ws.map(w=>`${cdn(u,w,Math.round(w*CARD_H_FACTOR))} ${w}w`).join(", ");
}

/* load data */
const url = import.meta.env.PUBLIC_SHEET_JSON;
let rows = [];
try {
  const raw = await fetchSheet(url);
  rows = raw.map(n => ({...n, _slug: (n.slug?.trim() || slugify(n.title || ""))}));
} catch {
  rows = [{ _slug: "", title: "Fallback", desc: "Sheet didn’t load.", img: "" }];
}

/* random hero image from rows (fallback to a static) */
const heroCandidates = rows.filter(r=>r.img);
const heroPick = heroCandidates.length ? heroCandidates[Math.floor(Math.random()*heroCandidates.length)] : null;
const heroRaw = heroPick ? rawPath(heroPick.img) : "/images/montane.webp";
const heroSrcUrl = heroSrc(heroRaw);
const heroSet = heroSrcSet(heroRaw);
const heroAlt = heroPick?.title ?? "Neighbourhoods";
const heroW = 1600, heroH = 900;

/* card sizes */
const SIZES = "(min-width: 960px) calc((min(72rem, 100vw) - 32px) / 3), (min-width: 640px) calc((min(72rem, 100vw) - 32px) / 2), calc(min(72rem, 100vw) - 32px)";
---
<Site title={title} description={description} active="neighbourhoods">
  {heroSrcUrl && <link slot="head" rel="preload" as="image" href={heroSrcUrl} fetchpriority="high" />}

  <!-- 55vh hero -->
  <div slot="hero" class="hero-wrap">
    <style>
      .hero-wrap { position:relative; height:55vh; }
      .hero-img  { position:absolute; inset:0; width:100%; height:100%; object-fit:cover; display:block; }
      .shade     { position:absolute; inset:0; background:linear-gradient(180deg, rgba(0,0,0,.35), rgba(0,0,0,.15)); }

      .hero-text { position:absolute; inset:0; display:flex; align-items:flex-end; }
      .hero-side {
        padding-left:  calc(max((100vw - var(--max)) / 2, 0px) + var(--pad));
        padding-right: calc(max((100vw - var(--max)) / 2, 0px) + var(--pad));
        padding-bottom: calc(var(--pad) * 2);
        width:100%;
        color:#fff;
      }
      .hero-title { margin:0; font-size:clamp(28px,5vw,44px); line-height:1.15; text-shadow:0 2px 18px rgba(0,0,0,.35); }
    </style>

    <img
      class="hero-img"
      src={heroSrcUrl}
      srcset={heroSet}
      sizes="100vw"
      alt={heroAlt}
      width={heroW} height={heroH}
      fetchpriority="high"
      decoding="async"
    />
    <div class="shade"></div>
    <div class="hero-text">
      <div class="hero-side">
        <h1 class="hero-title">Neighbourhoods</h1>
      </div>
    </div>
  </div>

  <!-- INTRO AS A FULL-WIDTH CARD WITH LIGHTER SHADOW + BORDER -->
  <section class="intro-card">
    <style>
      /* Tunables used across all cards on this page */
      :root{
        --card-br: 14px;
        --card-border: #d6d6d6;                 /* subtle, but visible */
        --card-shadow: 0 1px 2px rgba(0,0,0,.03);
        --card-shadow-hover: 0 6px 18px rgba(0,0,0,.07);
        --card-lift: -2px;                      /* softer hover lift */
      }

      .intro-card {
        max-width: var(--max);
        margin: 2rem auto;
        background: #fff;
        border: 2px solid var(--card-border);
        border-radius: var(--card-br);
        box-shadow: var(--card-shadow);
        padding: 1.75rem 1.5rem;
      }
      .intro-card p {
        margin: 0;
        font-size: 1.125rem;
        line-height: 1.6;
        color: #222;
      }
    </style>
    <p>Fernie’s neighbourhoods offer a diverse mix of mountain living options, from ski-in/ski-out homes near Fernie Alpine Resort to quiet family-friendly streets and vibrant downtown condos. Each area has its own character—Montane is perfect for outdoor enthusiasts with trail access, Riverside offers river views, and Ridgemont has a central location close to schools. Whether you’re seeking a weekend retreat, full-time home, or investment property, Fernie’s neighbourhoods provide something for every lifestyle while keeping you close to stunning scenery and year-round recreation.</p>
  </section>

  <style>
    .grid{display:grid;gap:16px;grid-template-columns:1fr}
    @media (min-width:640px){.grid{grid-template-columns:repeat(2,1fr)}}
    @media (min-width:960px){.grid{grid-template-columns:repeat(3,1fr)}}

    /* Cards: lighter base + hover */
    .card{
      border:1px solid var(--card-border);
      border-radius: var(--card-br);
      overflow:hidden;
      background:#fff;
      box-shadow: var(--card-shadow);
      transition: transform .18s ease, box-shadow .18s ease, border-color .18s ease;
    }
    @media (hover:hover){
      .card:hover{
        transform: translateY(var(--card-lift));
        box-shadow: var(--card-shadow-hover);
        border-color:#cfcfcf;
      }
    }
    @media (prefers-reduced-motion: reduce){
      .card{ transition:none }
      .card:hover{ transform:none }
    }

    .card a{display:block;color:inherit;text-decoration:none}

    .thumb{aspect-ratio:19/10;width:100%;overflow:hidden}
    .thumb img{width:100%;height:100%;display:block;object-fit:cover}

    .inner{padding:12px}
    .inner h3{margin:6px 0;font-size:18px}
    .inner p{margin:0 0 8px;color:#444}
  </style>

  <section class="grid" aria-label="Neighbourhoods list">
    {rows.map((n, i) => {
      const raw = rawPath(n.img);
      const src = raw ? cardSrc(raw, 480) : "";
      const srcset = raw ? cardSrcset(raw) : undefined;
      return (
        <article class="card">
          <a href={n._slug ? `/neighbourhoods/${n._slug}` : "#"}>
            {raw && (
              <div class="thumb">
                <img
                  src={src}
                  srcset={srcset}
                  sizes={SIZES}
                  alt={n.title}
                  width="800" height="421"
                  loading={i === 0 ? "eager" : "lazy"}
                  fetchpriority={i === 0 ? "high" : undefined}
                  decoding="async"
                />
              </div>
            )}
            <div class="inner">
              <h3>{n.title}</h3>
              <p>{n.desc}</p>
            </div>
          </a>
        </article>
      );
    })}
  </section>
</Site>
